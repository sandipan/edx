source('C:/courses/Edx/Current/Microsoft DAT203.1x Data Science Essentials/MicrosoftLearning-Data-Science-Essentials-91ddbff/Labs/Mod4/LoadAutos.R')
source('C:/courses/Edx/Current/Microsoft DAT203.1x Data Science Essentials/MicrosoftLearning-Data-Science-Essentials-91ddbff/Labs/Mod4/LoadAutos.R')
read.auto <- function(path = 'c:/dat203.1x/mod4/'){
## Read the csv file
filePath <- file.path(path, 'Automobile price data _Raw_.csv')
auto.price <- read.csv(filePath, header = TRUE,
stringsAsFactors = FALSE)
## Coerce some character columns to numeric
cols <- c('price', 'bore', 'stroke',
'horsepower', 'peak.rpm')
auto.price[, cols] <- lapply(auto.price[, cols], as.numeric)
## remove rows with NAs
auto.price <- auto.price[complete.cases(auto.price), ]
## Add a log transformed column for price
auto.price$lnprice <- log(auto.price$price)
## Consolidate the number of cylinders
auto.price$num.cylinders <-
ifelse(auto.price$num.of.cylinders %in% c("four", "three"), "three-four",
ifelse(auto.price$num.of.cylinders %in% c("five", "six"), "five-six", "eight-twelve"))
auto.price
}
auto.price <- read.auto(path = 'PATH-TO-YOUR-LAB-FILES')
str(auto.price)
source('C:/courses/Edx/Current/Microsoft DAT203.1x Data Science Essentials/MicrosoftLearning-Data-Science-Essentials-91ddbff/Labs/Mod4/LoadAutos.R')
source('C:/courses/Edx/Current/Microsoft DAT203.1x Data Science Essentials/MicrosoftLearning-Data-Science-Essentials-91ddbff/Labs/Mod4/LoadAutos.R')
source('C:/courses/Edx/Current/Microsoft DAT203.1x Data Science Essentials/MicrosoftLearning-Data-Science-Essentials-91ddbff/Labs/Mod4/LoadAutos.R')
source('C:/courses/Edx/Current/Microsoft DAT203.1x Data Science Essentials/MicrosoftLearning-Data-Science-Essentials-91ddbff/Labs/Mod4/LoadAutos.R')
## Numeric columns to plot
num.cols <- c("wheel.base",
"width",
"height",
"curb.weight",
"engine.size",
"bore",
"compression.ratio",
"city.mpg",
"price",
"lnprice")
## Define columns for making a conditioned histogram
plot.cols2 <- c("length",
"curb.weight",
"engine.size",
"city.mpg",
"price")
## Function to plot conditioned histograms
auto.hist <- function(x) {
library(ggplot2)
library(gridExtra)
## Compute the bin width
rg = range(auto.price[,x])
bw = (rg[2] - rg[1])/30
## Define the title
title <- paste("Histogram of", x, "conditioned on type of drive wheels")
## Create the histogram
ggplot(auto.price, aes_string(x)) +
geom_histogram(aes(y = ..count..), binwidth = bw) +
facet_grid(. ~ drive.wheels) +
ggtitle(title)
}
## Function to create conditioned box plots
auto.box <- function(x) {
title <- paste("Box plot of", x, "by type of drive wheels")
ggplot(auto.price, aes_string('drive.wheels', x)) +
geom_boxplot() +
ggtitle(title)
}
## Define columns for making scatter plots
plot.cols3 <- c("length",
"curb.weight",
"engine.size",
"city.mpg")
## Scatter plot using color to differentiate points
scatter.auto <- function(x){
require(ggplot2)
title <- paste("price vs.", x, 'with color by num.cylinders')
ggplot(auto.price, aes_string(x, 'price')) +
geom_point(aes(color = factor(num.cylinders))) +
ggtitle(title)
}
## Conditioned scatter plots
scatter.auto.cond <- function(x){
require(ggplot2)
library(gridExtra)
title <- paste("price vs.", x, 'with color by num.cylinders and body style')
ggplot(auto.price, aes_string(x, 'price')) +
geom_point(aes(color = factor(fuel.type))) +
facet_grid(body.style ~ num.cylinders) +
ggtitle(title)
}
pairs(~ ., data = auto.price[, num.cols])
lapply(plot.cols2, auto.hist)
lapply(plot.cols2, auto.box)
lapply(plot.cols3, scatter.auto)
scatter.auto.cond(plot.cols3)
scatter.auto.cond(plot.cols3)
read.income <- function(path = 'c:/dat203.1x/mod4/'){
## Read the csv file
filePath <- file.path(path, 'Adult Census Income Binary Classification dataset.csv')
read.csv(filePath, header = TRUE, stringsAsFactors = FALSE)
}
## Features to plot
name.list <- function(x) {
names <- names(x)
len <- length(names)
names[-len]
}
## Bar plot of categorical features
bar.income <- function(x){
library(ggplot2)
if(!is.numeric(Income[,x])) {
capture.output(
plot( ggplot(Income, aes_string(x)) +
geom_bar() +
facet_grid(. ~ income) +
ggtitle(paste("Counts of income level by",x))))
}}
## Create Box plot of numeric features
box.income <- function(x){
library(ggplot2)
if(is.numeric(Income[,x])) {
capture.output(
plot( ggplot(Income, aes_string('income', x)) +
geom_boxplot() +
ggtitle(paste("Counts of income level by",x))))
}}
Income <- read.income('SET-YOUR-PATH-HERE')
str(Income)
Income <- read.income('C:/courses/Edx/Current/Microsoft DAT203.1x Data Science Essentials/MicrosoftLearning-Data-Science-Essentials-91ddbff/Labs/Mod4/')
str(Income)
feature.names <- name.list(Income)
lapply(feature.names, bar.income)
lapply(feature.names, bar.income)
lapply(feature.names, box.income)
lapply(plot.cols2, auto.hist)
lapply(feature.names, box.income)
216-193
193-174
